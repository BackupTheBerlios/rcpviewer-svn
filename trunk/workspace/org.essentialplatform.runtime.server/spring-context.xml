<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
	<bean id="server" 
		class="org.essentialplatform.runtime.server.StandaloneServer">
		<property name="databaseServer" ref="hsqlDatabaseServer"/>
		<property name="remoting" ref="remoting"/>
		<property name="binding" ref="serverBinding"/>
		<property name="transactionProcessor" ref="noopTransactionProcessor"/>
	</bean>

	
	<bean id="serverBinding"
		class="org.essentialplatform.runtime.server.domain.bindings.RuntimeServerBinding">
		<property name="domainRegistrar" ref="domainRegistrar">
			<description>
				The mechanism for registering domain classes.
			</description>
		</property>
		<property name="primaryBuilder">
			<description>
				The IDomainBuilder to delegate to when interacting with the
				domain objects.  In theory the domain plugin could redefine 
				the 'primaryBuilder' bean, though this will be rare.
			</description>
			<ref bean="primaryBuilder"/>
		</property>
		<!-- 
		<property name="handleAssigner" ref="xxx"></property>
		-->
	</bean>


	<bean id="primaryBuilder" 
		class="org.essentialplatform.progmodel.essential.runtime.EssentialProgModelRuntimeBuilder">
		<description>
			Default definition of 'primaryBuilder', representing the programming
			model conventions under which the domain classes have been written.
			The domain plugin could in theory redefine this bean, though this
			will be rare.
		</description>
	</bean>

	<bean id="domainRegistrar"
		class="org.essentialplatform.runtime.shared.domain.ServerSideDomainRegistrar">
		<description>
			A mechanism for actually registering the domain classes.
		</description>
	</bean>
	
	<bean id="hsqlDatabaseServer" 
		class="org.essentialplatform.runtime.server.database.hsqldb.HsqlDatabaseServer">
		<property name="password"><null/></property>
		<property name="port" value="9001"/>
		<property name="silent" value="true"/>
		<property name="user" value="sa"/>
	</bean>
	
	<bean id="remoting" 
		class="org.essentialplatform.runtime.server.remoting.activemq.ActiveMqRemotingServer"
		init-method="dependenciesInjected">
		<property name="bindAddress" value="tcp://localhost:61616"/>
		<property name="messageListenerEnabled" value="true"/>
		<property name="marshalling" ref="marshalling"/>
		<property name="destinationCleaner" ref="destinationCleaner"/>
	</bean>
	
	<bean id="marshalling" 
		class="org.essentialplatform.runtime.shared.remoting.marshalling.xstream.XStreamMarshalling">
	</bean>
	
	<bean id="hibernateTransactionProcessor" 
		class="org.essentialplatform.runtime.server.remoting.xactnprocessor.hibernate.HibernateTransactionProcessor">
	</bean>
	
	<bean id="noopTransactionProcessor" 
		class="org.essentialplatform.runtime.server.remoting.xactnprocessor.noop.NoopTransactionProcessor">
	</bean>
	
	<bean id="destinationCleaner" 
		class="org.essentialplatform.runtime.shared.remoting.activemq.DestinationCleaner">
	</bean>
	

</beans>

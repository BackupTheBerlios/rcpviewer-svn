<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<!--
  Checkstyle configuration for RcpViewer.
  
  Adapted from sub_checks.xml.
-->

<module name="Checker">

    <!-- Checks that a package.html file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->
    <module name="PackageHtml"/>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>

    <module name="TreeWalker">

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocType"/>
        <module name="JavadocStyle"/>
        <!--
        <module name="JavadocMethod"/>
        <module name="JavadocVariable"/>
		-->

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName">
			<property name="format"
				  value="^[_](\.[a-z][a-zA-Z0-9]*)*$"/>
		</module>
        <module name="PackageName">
			<property name="format"
				  value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
		</module>
        <module name="MethodName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName">
			<property name="format"
				  value="^[__](\.[a-z][a-zA-Z0-9]*)*$"/>
		</module>
		<module name="TypeName">
		    <property name="format"
                value="^I[A-Z][a-zA-Z0-9]*$"/>
		    <property name="tokens"
			    value="INTERFACE_DEF"/>
		</module>
		<module name="TypeName">
		    <property name="format"
                value="^[A-Z][a-z0-9][a-zA-Z0-9]*$"/>
		    <property name="tokens"
			    value="INTERFACE_DEF"/>
		</module>
         <!--
        <module name="AbstractClassName"/>
		-->

        <!-- Checks for Headers                                -->
        <!-- See http://checkstyle.sf.net/config_header.html   -->
        <!-- <module name="Header">                            -->
            <!-- The follow property value demonstrates the ability     -->
            <!-- to have access to ANT properties. In this case it uses -->
            <!-- the ${basedir} property to allow Checkstyle to be run  -->
            <!-- from any directory within a project. See property      -->
            <!-- expansion,                                             -->
            <!-- http://checkstyle.sf.net/config.html#properties        -->
            <!-- <property                                              -->
            <!--     name="headerFile"                                  -->
            <!--     value="${basedir}/java.header"/>                   -->
        <!-- </module> -->

        <!-- Following interprets the header file as regular expressions. -->
        <!-- <module name="RegexpHeader"/>                                -->


        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <!--
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>
		-->

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="ParameterNumber"/>
        <!--
        <module name="FileLength"/>
        <module name="LineLength"/>
        <module name="MethodLength"/>
		-->


        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <!--
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad"/>
		<module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/> 
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="TabCharacter"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>
		-->


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
		<!--
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>
		-->


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
		<!--
        <module name="AvoidNestedBlocks">
			<property name='allowInSwitchCase' value='true'/>
        </module>
		-->
        <module name="EmptyBlock">
			<!-- property name='allowInSwitchCase' value='true'/ -->
			<property name='option' value='text'/>
		</module>
        <module name="LeftCurly">
			<property name='option' value='eol'></property>
        </module>
        <module name="NeedBraces">
			<!-- property  name='option' value='same'/ -->
		</module>
        <module name="RightCurly"/>


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module name="ArrayTrailingComma"/>
        <module name="DoubleCheckedLocking"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
		<module name="FinalLocalVariable">
		    <property name="tokens" value="PARAMETER_DEF"/>
		</module>
        <module name="HiddenField"/>
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <module name="RedundantThrows">
			<property name="allowUnchecked" value="true"/>
		</module>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
		<module name="NestedIfDepth">
		    <property name="max" value="3"/>
		</module>
		<module name="NestedTryDepth">
		    <property name="max" value="1"/>
		</module>
        <module name="SuperClone"/>
        <module name="SuperFinalize"/>
        <module name="IllegalCatch"/>
        <module name="PackageDeclaration"/>
        <module name="JUnitTestCase"/>
        <module name="DeclarationOrder"/>
        <module name="ParameterAssignment"/>
        <module name="ExplicitInitialization"/>
        <module name="DefaultComesLast"/>
		<module name="MultipleStringLiterals">
		    <property name="allowedDuplicates" value="2"/>
		</module>
        <module name="MultipleVariableDeclarations"/>
        <module name="UnnecessaryParentheses"/>
		<!--
        <module name="AvoidInlineConditionals"/>
        <module name="IllegalToken"/>
        <module name="IllegalTokenText"/>
        <module name="ReturnCount"/>
        <module name="IllegalType"/>
        <module name="MissingCtor"/>
        <module name="FallThrough"/>
		-->
		
		
        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <module name="DesignForExtension"/>
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier"/>


        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="FinalParameters"/>
        <module name="GenericIllegalRegexp">
            <property name="format" value="\s+$"/>
            <property name="message" value="Line has trailing spaces."/>
        </module>
        <module name="TodoComment"/>
        <module name="UpperEll"/>

    </module>

</module>

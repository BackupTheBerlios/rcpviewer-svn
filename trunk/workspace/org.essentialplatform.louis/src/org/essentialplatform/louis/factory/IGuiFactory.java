/**
 * 
 */
package org.essentialplatform.louis.factory;

import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.ui.forms.IFormPart;
import org.eclipse.ui.forms.widgets.ExpandableComposite;
import org.eclipse.ui.forms.widgets.FormToolkit;

/**
 * Generic type for creating all gui elements.
 * @author Mike
 *
 */
public interface IGuiFactory<T> {
	
	/**
	 * Default style for sections.
	 */
	public static final int SECTION_STYLE =
		ExpandableComposite.TREE_NODE 
		| ExpandableComposite.LEFT_TEXT_CLIENT_ALIGNMENT 
		| ExpandableComposite.CLIENT_INDENT;
	
	/**
	 * Default icon size.
	 */
	public static final Point PART_ICON_SIZE = new Point( 12, 12);


	/* contract*/

	
	/**
	 * Whether the implementation is applicable for the passed model.
	 * <br>The optional second argument idnicates the context of the
	 * gui creation
	 * @param model
	 * @param context;
	 */
	public boolean isApplicable( Object model, IGuiFactory<?> parent ) ;
	
	/**
	 * Returns a description of the Gui generated by this factory that can be
	 * displayed to the user.  Used in configuration and selection options.
	 * Can be a blank <code>String</code> but never <code>null</code>.
	 * @return
	 */
	public String getDescription();
	
	/**
	 * Standard call to made in a recursive manner for all model elements.
	 * <br> No arg, nor the return value, can be <code>null</code>.
	 * @param model
	 * @param toolkit
	 * @param parent
	 * @param hints
	 * @return configurator
	 */
	public IFormPart createGui( 
			T model,
			FormToolkit toolkit,
			Composite parent,
			GuiHints hints );
}

'''Design Points'''
* A DomainBootstrapFactory used to allow options in the future.
* The returned IDomainBootstrap is wrapped in a  job.  This is strictly unecessary at the moment (indeed necesitates a join() call in plugin's startup()) but wrapping such long / heavy operations such as this in Job is one of my suggested standards.
* Similarly there is a session bootstrap job - this is in the plugin startup rather than the application initialisation so that, eventually, it can be configured via eclipse mechanisms.
* Ted's dummy authorisation wizard is left out for now.  Don't particularly like the wizard approach to login - I suggest a good ole' dialog.
* Currently no domains extesnion point - simply uses default - this is where the session bootstrap job could come in.
* The session tree view opens once there are objects attached to the default session.  It can be closed but will annoyingly re-open every time an object is added to the session.  This will be corrected once I add some GUI preferences.  Note that there is currently a single session so a single session tree view.
 
'''Current Errors'''
* second save() fails on editor - re: discussion between save() and persist() methods. 

=======
1 About this plugin
The "main" for the RCP runtime application.  Defines a number of extension points by which the domain classes of the domain to be rendered are picked up.

1.1 Note
To be merged with Eclipse:/de.berlios.rcpviewer.rcp/wiki/Index.wiki

1 Running
See Eclipse:/de.berlios.rcpviewer.gui.acme/wiki/Index.wiki.
This also explains how to include search functionality.

1 Suggested Standards
* wrap all log / complex operations in Job's
* 'eat your own dogfood' for all extension points  '''unless''' the fall-back default option; hecnce 'exts' sub-directories where extension points are implemented
* apart from explicit extension points, am '''not''' writing classes for extension, rather the opposite - trying to make as un-public as possible.
* place constants on appropriate classes - not a global constant interface (an anti-pattern?)
* STATE IS EVIL, hence:
** No caching of references - the platform does too much of that already
** Recalculate rather than store calculation results

